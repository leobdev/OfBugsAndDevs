@page "/posts/{BlogPostSlug}"
@using OfBugsAndDevs.Data.Entities
@inject NavigationManager NavigationManager
@inject IBlogPostService BlogPostService
@inject IBlogPostAdminService BlogPostAdminService

@if (_blogPost.BlogPostID > 0)
{

    <div class="container">
        <div class="jumbotron jumbotron-fluid mb-3 pl-0 pt-0 pb-0 bg-white position-relative">
            <div class="h-100 tofront">
                <div class="row justify-content-between">
                    <div class="col-md-6 pt-6 pb-6 pr-6 align-self-center">
                        <p class="text-uppercase font-weight-bold">
                            <a class="text-danger" href="@_blogPost.Category.Slug-posts">@_blogPost.Category.CategoryName</a>
                        </p>
                        <h1 class="display-4 secondfont mb-3 font-weight-bold">@_blogPost.Title</h1>
                        <p class="mb-3">
                            @_blogPost.Introduction
                        </p>
                        <div class="d-flex align-items-center">
                            <img class="rounded-circle" src="/img/Avatar1.jpg" width="70">
                            <small class="ml-2">
                                @_blogPost.User.Name <span class="text-muted d-block">@_blogPost.Published.ToDisplay()</span>
                            </small>
                        </div>
                    </div>
                    <div class="col-md-6 pr-0">
                        <img src="@_blogPost.Image">
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container pt-4 pb-4">
        <div class="row justify-content-center">
            <div class="col-md-12 ">
                <article class="article-post">
                   @((MarkupString)_blogPost.Content)
                </article>
                <SubscribeBox />
            </div>
        </div>
    </div>

    <div class="container pt-4 pb-4">
        <h5 class="font-weight-bold spanborder"><span>Read next</span></h5>
        <FeaturedBlogPostsList Posts="_relatedPosts" />
    </div>

}
@code {
    [Parameter]
    public string? BlogPostSlug { get; set; }
    private BlogPost _blogPost = new();
    private BlogPost[] _relatedPosts = [];

    protected override async Task OnInitializedAsync()
    {
        var result = await BlogPostService.GetBlogPostBySlugAsync(BlogPostSlug);
        if (result.IsEmpty)
        {
            NavigationManager.NavigateTo("/", replace: true);
            return;
        }

        _blogPost = result.BlogPost;
        _relatedPosts = result.RelatedBlogPost;

        await UpdateViewsAsync(_blogPost);
    }


    private async Task UpdateViewsAsync(BlogPost blogPost)
    {
        blogPost.ViewCount++;
        await BlogPostAdminService.SaveBlogPostAsync(blogPost, blogPost.UserID);
    }

}
