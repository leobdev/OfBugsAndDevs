@page "/{categorySlug}-posts"
@using OfBugsAndDevs.Data.Entities
@inject IBlogPostService BlogPostService
@inject ICategoryService CategoryService
@inject NavigationManager NavigationManager


<div class="container mt-5 mb-5">
    <div class="row">
        <div class="col-md-8">
            @if (HasPosts)
            {
                <h5 class="font-weight-bold spanborder"><span>Featured in @_category?.CategoryName</span></h5>
                <div class="card border-0 mb-5 box-shadow">
                    <div style="background-image: url(@_featured.Image); height: 350px; background-size: cover; background-repeat: no-repeat;">
                    </div>
                    <div class="card-body px-0 pb-0 d-flex flex-column align-items-start">
                        <h2 class="h2 font-weight-bold">
                            <a class="text-dark" href="posts/@_featured.Slug">@_featured.Title</a>
                        </h2>
                        <p class="card-text">
                            @_featured.Introduction
                        </p>
                        <div>
                            <small class="d-block"><a class="text-muted" href="">@_featured.User.Name</a></small>
                            <small class="text-muted">@_featured.Published.ToDisplay()</small>
                        </div>
                    </div>
                </div>

                <h5 class="font-weight-bold spanborder"><span>Latest</span></h5>
                <BlogPostsList Posts="_recent" />
                <hr />
                <br />

                <div>
                    <a href="@CategorySlug-posts/all" class="btn btn-lg btn-block  btn-outline-dark float-right">All @_category?.CategoryName Posts</a>
                </div>
            }
            else
            {
                <h5 class="font-weight-bold spanborder"><span>Featured in @_category?.CategoryName</span></h5>
                <div class="card border-0 mb-5 box-shadow">
                    <p>There are no blog posts under @_category?.CategoryName yet</p>
                </div>
            }
        </div>
        @if (HasPosts)
        {

            <div class="col-md-4 pl-4">
                <div class="sticky-top">
                    <h5 class="font-weight-bold spanborder"><span>Popular in @_category?.CategoryName</span></h5>
                    <PopularBlogPostsList Posts="_popular" />
                </div>
            </div>
        }
    </div>
</div>

<div class="container pt-4 pb-4">
    <SubscribeBox />
</div>


@code {
    [Parameter]
    public string? CategorySlug { get; set; }
    private Category? _category { get; set; }
    private BlogPost? _featured;
    private BlogPost[] _popular = [];
    private BlogPost[] _recent = [];
    private BlogPost _firstFeatured = default!;
    // if featured is null, we know there's no posts in this category
    // as we are fetching the resent blogpost if there is no featured post
    private bool HasPosts => _featured is not null;

    protected override async Task OnInitializedAsync()
    {
        var category = await CategoryService.GetCategoryBySlugAsync(CategorySlug);
        if (category is null)
        {
            NavigationManager.NavigateTo("/", replace: true);
            return;
        }

        _category = category;
        var posts = await Task.WhenAll(
                BlogPostService.GetFeaturedBlogPostsAsync(5, _category.CategoryID),
                BlogPostService.GetPopularBlogPostsAsync(4, _category.CategoryID),
                BlogPostService.GetRecentBlogPostsAsync(5, _category.CategoryID)
        );

        _featured = posts[0].FirstOrDefault();
        _popular = posts[1];
        _recent = posts[2];


    }
}
